openapi: 3.0.0
info:
  title: Tado
  description: Community managed API specification for the tado smart thermostat
  version: 2.2024.07.28.0
servers:
  - url: https://my.tado.com/api/v2/
    description: TODO
security:
  - oauth2: [] # no scopes

paths:
  /homes:
    get:
      summary: Get full details of all homes associated with the authenticated user
      operationId: getHomes
      responses:
        '200':
          description: successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfHomes'
  /homes/{homeId}:
    get:
      summary: Get full details of a home by ID
      operationId: getHome
      parameters:
        - in: path
          name: homeId
          schema:
            type: string
          required: true
          description: unique ID of a home
      responses:
        '200':
          description: successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Home'
  /homes/{homeId}/devices:
    get:
      summary: Get all tado devices associated with the provided homeId (the device information included in the response for /homes/{homeId}/zones and /homes/{homeId}/zones/{zoneId} are slightly more extensive)
      operationId: getDevices
      parameters:
        - in: path
          name: homeId
          schema:
            type: string
          required: true
          description: ID of a home (unique within a home)
      responses:
        '200':
          description: successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfDeviceBases'
  /homes/{homeId}/mobileDevices:
    get:
      summary: Get all mobile devices associated with the provided homeId
      operationId: getMobileDevices
      parameters:
        - in: path
          name: homeId
          schema:
            type: string
          required: true
          description: ID of a home (unique within a home)
      responses:
        '200':
          description: successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfMobileDevices'
  /homes/{homeId}/zones:
    get:
      summary: Get all zones associated with the provided homeId. Includes full information of the tado devices present in each zone.
      operationId: getZones
      parameters:
        - in: path
          name: homeId
          schema:
            type: string
          required: true
          description: ID of a home (unique within a home)
      responses:
        '200':
          description: successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfZones'
  /homes/{homeId}/zones/{zoneId}:
    get:
      summary: Get a specific zone within a specific home. Includes full information of the tado devices present in the zone.
      operationId: getZone
      parameters:
        - in: path
          name: homeId
          schema:
            type: string
          required: true
          description: unique ID of a home
        - in: path
          name: zoneId
          schema:
            type: string
          required: true
          description: ID of a zone (unique within a home)
      responses:
        '200':
          description: successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Zone'
  /me:
    get:
      summary: Returns information about the authenticated user, (summary) information of their home(s) and mobile devices.
      operationId: getMe
      responses:
        '200':
          description: successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

components:
  securitySchemes:
    oauth2:
      type: oauth2
      flows:
        password:
          tokenUrl: https://auth.tado.com/oauth/token
          scopes: {}

  schemas:
    ArrayOfDeviceBases:
      type: array
      items:
        $ref: '#/components/schemas/DeviceBase'
    ArrayOfHomes:
      type: array
      items:
        $ref: '#/components/schemas/Home'
    ArrayOfMobileDevices:
      type: array
      items:
        $ref: '#/components/schemas/MobileDevice'
    ArrayOfZones:
      type: array
      items:
        $ref: '#/components/schemas/Zone'
    Device:
      allOf:
        - $ref: '#/components/schemas/DeviceBase'
      properties:
        duties:
          type: array
          items:
            type: string
            example: ZONE_UI
            description: "known values: ZONE_UI (seen for DeviceType SU02, VA02), ZONE_LEADER (seen for DeviceType SU02, VA02), ZONE_DRIVER (seen for DeviceType VA02); most probably an enum in the actual API"
    DeviceBase:
      type: object
      properties:
        deviceType:
          $ref: '#/components/schemas/DeviceType'
        serialNo:
          type: string
          example: SU4126033143
        shortSerialNo:
          type: string
          example: SU4126033143
        currentFwVersion:
          type: string
          example: 215.1
        connectionState:
          type: object
          description: "property known to be present for DeviceType SU02, VA02, BR02"
          properties:
            value:
              type: boolean
              example: true
            timestamp:
              type: string
              format: date-time
              example: 2022-11-25T09:40:14.803Z
        characteristics:
          type: object
          properties:
            capabilities:
              type: array
              description: array known to be empty for DeviceType BR02
              items:
                type: string
                example: INSIDE_TEMPERATURE_MEASUREMENT
                description: "known values: INSIDE_TEMPERATURE_MEASUREMENT, IDENTIFY; most probably an enum in the actual API"
        mountingState:
          type: object
          description: property known to be present for DeviceType VA02
          properties:
            value:
              type: string
              example: CALIBRATED
              description: "known values: CALIBRATED; most probably an enum in the actual API"
            timestamp:
              type: string
              format: date-time
              example: 2022-11-25T09:40:14.803Z
        mountingStateWithError:
          type: string
          example: CALIBRATED
          description: "property known to be present for DeviceType VA02; known values: CALIBRATED; most probably an enum in the actual API"
        batteryState:
          type: string
          example:
          description: "property known to be present for DeviceType SU02, VA02"
        orientation:
          type: string
          example: HORIZONTAL
          description: "property known to be present for DeviceType VA02; known values: HORIZONTAL"
        childLockEnabled:
          type: boolean
          example: false
          description: "property known to be present for DeviceType VA02"
        isDriverConfigured:
          type: boolean
          example: true
          description: "property known to be present for DeviceType BR02"
    DeviceType:
      type: string
      description: "known values: SU02 (Wireless Smart Thermostat V3+), VA02 (Smart Radiator Thermostat V3+), BR02; most probably an enum in the actual API"
    Home:
      allOf:
        - $ref: '#/components/schemas/HomeBase'
      properties:
        dateTimeZone:
          type: string
          example: "Europe/London"
        dateCreated:
          type: string
          format: date-time
          example: 2022-11-25T09:40:14.803Z
        temperatureUnit:
          type: string
          enum: [CELSIUS, FAHRENHEIT]
          example: CELSIUS
        partner:
          type: string
          description: meaning is unknown
        simpleSmartScheduleEnabled:
          type: boolean
          example: true
        awayRadiusInMeters:
          type: integer
          example: 400
        installationCompleted:
          type: boolean
          example: true
        incidentDetection:
          type: object
          properties:
            supported:
              type: boolean
              example: true
            enabled:
              type: boolean
              example: true
        generation:
          type: string
          example: PRE_LINE_X
          description: "most likely an enum in the API; currently known values: PRE_LINE_X"
        zonesCount:
          type: integer
          example: 5
          description: number of zones is this home
        language:
          type: string
          example: nl
        skills:
          type: array
          items:
            type: string
          description: this is assumed to be an array of strings, currently tested set-up returns an empty array
        christmasModeEnabled:
          type: boolean
          example: true
          description: no idea what this means, but would be really interested to know more...
        showAutoAssistReminders:
          type: boolean
          example: true
        contactDetails:
          type: object
          description: the primary contact for this home, also appears to be the only one to receive any email notifications (like 'low battery' or 'open window' warnings)
          properties:
            name:
              type: string
              example: "Kristel"
            email:
              type: string
              example: "kristel@example.com"
            phone:
              type: string
              example: "+31123456789"
        address:
          type: object
          description: postal address of this home
          properties:
            addressLine1:
              type: string
              example: "Kerkstraat 1"
            addressLine2:
              type: string
            zipCode:
              type: string
              example: "1234AA"
            city:
              type: string
              example: "Utrecht"
            state:
              type: string
            country:
              type: string
              description: most probably an ISO 3166-1 alpha-3 country code
              example: "NLD"
        geolocation:
          type: object
          description: geo location of this home, most probably used to associated weather information with this home
          properties:
            latitude:
              type: number
              format: double
              example: 50.1234567
            longitude:
              type: number
              format: double
              example: -1.1234567
        consentGrantSkippable:
          type: boolean
          example: true
        enabledFeatures:
          type: array
          items:
            type: string
            description: "currently known values: AA_SETTINGS_AS_WEBVIEW, AA_UPSELLING_A, CLIMATE_REPORT_AS_WEBVIEW, EIQ_SETTINGS_AS_WEBVIEW, HIDE_BOILER_REPAIR_SERVICE, OWD_SETTINGS_AS_WEBVIEW, SMART_SCHEDULE_AS_WEBVIEW"
        isAirComfortEligible:
          type: boolean
          example: true
        isBalanceAcEligible":
          type: boolean
          example: false
        isEnergyIqEligible:
          type: boolean
          example: true,
        isHeatSourceInstalled:
          type: boolean
          example: false
        isBalanceHpEligible:
          type: boolean
          example: false
    HomeBase:
      type: object
      properties:
        id:
          type: string
          description: unique home ID
          example: 1118186
        name:
          type: string
          description: user assigned name for this home
          example: my home
    MobileDevice:
      type: object
      properties:
        id:
          type: string
          example: 8254700
        name:
          type: string
          example: my device
          description: user assigned name for this device
        settings:
          type: object
          properties:
            geoTrackingEnabled:
              type: boolean
              example: false
            specialOffersEnabled:
              type: boolean
              example: true
            onDemandLogRetrievalEnabled:
              type: boolean
              example: false
        deviceMetadata:
          type: object
          properties:
            platform:
              type: string
              example: Android
            osVersion:
              type: string
              example: 11
            model:
              type: string
              example: Samsung_SM-T720
            locale:
              type: string
              example: nl
    User:
      type: object
      properties:
        name:
          type: string
          example: Kristel
        email:
          type: string
          example: kristel@example.org
        username:
          type: string
          example: kristel@example.org
        id:
          type: string
          description: globally unique user ID
          example: a7c7fc08-e362-4700-e9a1-45a5bded5c124
        locale:
          type: string
          example: en
        homes:
          type: array
          items:
            $ref: '#/components/schemas/HomeBase'
        mobileDevices:
          type: array
          items:
            $ref: '#/components/schemas/MobileDevice'
    Zone:
      type: object
      description: a heating (or cooling) zone in a home
      properties:
        id:
          type: string
          description: unique id of the zone within the home it belongs to
          example: 2
        name:
          type: string
          description: user assigned name
          example: my living room
        type:
          type: string
          description: "known values: HEATING, HOT_WATER; most probably an enum in the actual API"
          example: HEATING
        dateCreated:
          type: string
          format: date-time
          example: 2022-11-25T09:40:14.803Z
        deviceTypes:
          type: array
          items:
            $ref: '#/components/schemas/DeviceType'
        devices:
          type: array
          items:
            $ref: '#/components/schemas/Device'
        reportAvailable:
          type: boolean
          example: false
        showScheduleSetup:
          type: boolean
          example: true
        supportsDazzle:
          type: boolean
          example: true
        dazzleEnabled:
          type: boolean
          example: true
        dazzleMode:
          type: object
          properties:
            supported:
              type: boolean
              example: true
            enabled:
              type: boolean
              example: true
        openWindowDetection:
          type: object
          properties:
            supported:
              type: boolean
              example: true
            enabled:
              type: boolean
              example: true
            timeoutInSeconds:
              type: integer
              example: 900
